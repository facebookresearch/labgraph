{"ast":null,"code":"var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n\n      _.each(g.predecessors(node), visit);\n\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/graphlib/lib/alg/topsort.js"],"names":["_","require","module","exports","topsort","CycleException","g","visited","stack","results","visit","node","has","each","predecessors","push","sinks","size","nodeCount","prototype","Error"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,WAAD,CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,cAAR,GAAyBA,cAAzB;;AAEA,SAASD,OAAT,CAAiBE,CAAjB,EAAoB;AAClB,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,WAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAIX,CAAC,CAACY,GAAF,CAAMJ,KAAN,EAAaG,IAAb,CAAJ,EAAwB;AACtB,YAAM,IAAIN,cAAJ,EAAN;AACD;;AAED,QAAI,CAACL,CAAC,CAACY,GAAF,CAAML,OAAN,EAAeI,IAAf,CAAL,EAA2B;AACzBH,MAAAA,KAAK,CAACG,IAAD,CAAL,GAAc,IAAd;AACAJ,MAAAA,OAAO,CAACI,IAAD,CAAP,GAAgB,IAAhB;;AACAX,MAAAA,CAAC,CAACa,IAAF,CAAOP,CAAC,CAACQ,YAAF,CAAeH,IAAf,CAAP,EAA6BD,KAA7B;;AACA,aAAOF,KAAK,CAACG,IAAD,CAAZ;AACAF,MAAAA,OAAO,CAACM,IAAR,CAAaJ,IAAb;AACD;AACF;;AAEDX,EAAAA,CAAC,CAACa,IAAF,CAAOP,CAAC,CAACU,KAAF,EAAP,EAAkBN,KAAlB;;AAEA,MAAIV,CAAC,CAACiB,IAAF,CAAOV,OAAP,MAAoBD,CAAC,CAACY,SAAF,EAAxB,EAAuC;AACrC,UAAM,IAAIb,cAAJ,EAAN;AACD;;AAED,SAAOI,OAAP;AACD;;AAED,SAASJ,cAAT,GAA0B,CAAE;;AAC5BA,cAAc,CAACc,SAAf,GAA2B,IAAIC,KAAJ,EAA3B,C,CAAwC","sourcesContent":["var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing"]},"metadata":{},"sourceType":"script"}