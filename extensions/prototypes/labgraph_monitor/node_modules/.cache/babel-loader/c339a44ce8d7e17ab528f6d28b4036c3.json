{"ast":null,"code":"/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\n\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nmodule.exports = baseRange;","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/lodash/_baseRange.js"],"names":["nativeCeil","Math","ceil","nativeMax","max","baseRange","start","end","step","fromRight","index","length","result","Array","module","exports"],"mappings":"AAAA;AACA,IAAIA,UAAU,GAAGC,IAAI,CAACC,IAAtB;AAAA,IACIC,SAAS,GAAGF,IAAI,CAACG,GADrB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgD;AAC9C,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGR,SAAS,CAACH,UAAU,CAAC,CAACO,GAAG,GAAGD,KAAP,KAAiBE,IAAI,IAAI,CAAzB,CAAD,CAAX,EAA0C,CAA1C,CADtB;AAAA,MAEII,MAAM,GAAGC,KAAK,CAACF,MAAD,CAFlB;;AAIA,SAAOA,MAAM,EAAb,EAAiB;AACfC,IAAAA,MAAM,CAACH,SAAS,GAAGE,MAAH,GAAY,EAAED,KAAxB,CAAN,GAAuCJ,KAAvC;AACAA,IAAAA,KAAK,IAAIE,IAAT;AACD;;AACD,SAAOI,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n"]},"metadata":{},"sourceType":"script"}