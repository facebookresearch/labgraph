{"ast":null,"code":"var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n\n    if (!inV.length) {\n      return {\n        v: v\n      };\n    } else {\n      var result = _.reduce(inV, function (acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, {\n        sum: 0,\n        weight: 0\n      });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/dagre/lib/order/barycenter.js"],"names":["_","require","module","exports","barycenter","g","movable","map","v","inV","inEdges","length","result","reduce","acc","e","edge","nodeU","node","sum","weight","order"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,WAAD,CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;;AAEA,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,OAAvB,EAAgC;AAC9B,SAAON,CAAC,CAACO,GAAF,CAAMD,OAAN,EAAe,UAASE,CAAT,EAAY;AAChC,QAAIC,GAAG,GAAGJ,CAAC,CAACK,OAAF,CAAUF,CAAV,CAAV;;AACA,QAAI,CAACC,GAAG,CAACE,MAAT,EAAiB;AACf,aAAO;AAAEH,QAAAA,CAAC,EAAEA;AAAL,OAAP;AACD,KAFD,MAEO;AACL,UAAII,MAAM,GAAGZ,CAAC,CAACa,MAAF,CAASJ,GAAT,EAAc,UAASK,GAAT,EAAcC,CAAd,EAAiB;AAC1C,YAAIC,IAAI,GAAGX,CAAC,CAACW,IAAF,CAAOD,CAAP,CAAX;AAAA,YACEE,KAAK,GAAGZ,CAAC,CAACa,IAAF,CAAOH,CAAC,CAACP,CAAT,CADV;AAEA,eAAO;AACLW,UAAAA,GAAG,EAAEL,GAAG,CAACK,GAAJ,GAAWH,IAAI,CAACI,MAAL,GAAcH,KAAK,CAACI,KAD/B;AAELD,UAAAA,MAAM,EAAEN,GAAG,CAACM,MAAJ,GAAaJ,IAAI,CAACI;AAFrB,SAAP;AAID,OAPY,EAOV;AAAED,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAPU,CAAb;;AASA,aAAO;AACLZ,QAAAA,CAAC,EAAEA,CADE;AAELJ,QAAAA,UAAU,EAAEQ,MAAM,CAACO,GAAP,GAAaP,MAAM,CAACQ,MAF3B;AAGLA,QAAAA,MAAM,EAAER,MAAM,CAACQ;AAHV,OAAP;AAKD;AACF,GApBM,CAAP;AAqBD","sourcesContent":["var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n          nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n"]},"metadata":{},"sourceType":"script"}