{"ast":null,"code":"var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\n\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n  baseEach(collection, function (value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/lodash/_baseMap.js"],"names":["baseEach","require","isArrayLike","baseMap","collection","iteratee","index","result","Array","length","value","key","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,OAAT,CAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGL,WAAW,CAACE,UAAD,CAAX,GAA0BI,KAAK,CAACJ,UAAU,CAACK,MAAZ,CAA/B,GAAqD,EADlE;AAGAT,EAAAA,QAAQ,CAACI,UAAD,EAAa,UAASM,KAAT,EAAgBC,GAAhB,EAAqBP,UAArB,EAAiC;AACpDG,IAAAA,MAAM,CAAC,EAAED,KAAH,CAAN,GAAkBD,QAAQ,CAACK,KAAD,EAAQC,GAAR,EAAaP,UAAb,CAA1B;AACD,GAFO,CAAR;AAGA,SAAOG,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBV,OAAjB","sourcesContent":["var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"]},"metadata":{},"sourceType":"script"}