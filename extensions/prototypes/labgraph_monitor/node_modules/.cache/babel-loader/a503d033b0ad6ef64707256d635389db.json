{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zenak\\\\Desktop\\\\labgraph_monitor\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: 'interaction-1',\n  type: 'input',\n  data: {\n    label: 'Node 1'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}, {\n  id: 'interaction-2',\n  data: {\n    label: 'Node 2'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: 'interaction-3',\n  data: {\n    label: 'Node 3'\n  },\n  position: {\n    x: 400,\n    y: 100\n  }\n}, {\n  id: 'interaction-4',\n  data: {\n    label: 'Node 4'\n  },\n  position: {\n    x: 400,\n    y: 200\n  }\n}, {\n  id: 'interaction-e1-2',\n  source: 'interaction-1',\n  target: 'interaction-2',\n  animated: true\n}, {\n  id: 'interaction-e1-3',\n  source: 'interaction-1',\n  target: 'interaction-3'\n}];\n\nconst onNodeDragStart = (event, node) => console.log('drag start', node);\n\nconst onNodeDragStop = (event, node) => console.log('drag stop', node);\n\nconst onElementClick = (event, element) => console.log('click', element);\n\nconst onPaneClick = event => console.log('onPaneClick', event);\n\nconst onPaneScroll = event => console.log('onPaneScroll', event);\n\nconst onPaneContextMenu = event => console.log('onPaneContextMenu', event);\n\nconst onLoad = reactFlowInstance => reactFlowInstance.fitView({\n  padding: 0.2\n});\n\nconst InteractionFlow = () => {\n  _s();\n\n  const [elements, setElements] = useState(initialElements);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const [isSelectable, setIsSelectable] = useState(false);\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [isConnectable, setIsConnectable] = useState(false);\n  const [zoomOnScroll, setZoomOnScroll] = useState(false);\n  const [panOnScroll, setPanOnScroll] = useState(false);\n  const [panOnScrollMode, setPanOnScrollMode] = useState('free');\n  const [zoomOnDoubleClick, setZoomOnDoubleClick] = useState(false);\n  const [paneMoveable, setPaneMoveable] = useState(true);\n  const [captureZoomClick, setCaptureZoomClick] = useState(false);\n  const [captureZoomScroll, setCaptureZoomScroll] = useState(false);\n  const [captureElementClick, setCaptureElementClick] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    elements: elements,\n    elementsSelectable: isSelectable,\n    nodesConnectable: isConnectable,\n    nodesDraggable: isDraggable,\n    zoomOnScroll: zoomOnScroll,\n    panOnScroll: panOnScroll,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    onConnect: onConnect,\n    onElementClick: captureElementClick ? onElementClick : undefined,\n    onNodeDragStart: onNodeDragStart,\n    onNodeDragStop: onNodeDragStop,\n    paneMoveable: paneMoveable,\n    onPaneClick: captureZoomClick ? onPaneClick : undefined,\n    onPaneScroll: captureZoomScroll ? onPaneScroll : undefined,\n    onPaneContextMenu: captureZoomClick ? onPaneContextMenu : undefined,\n    onLoad: onLoad,\n    children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: 10,\n        top: 10,\n        zIndex: 4,\n        textTransform: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"draggable\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"draggable\",\n            type: \"checkbox\",\n            checked: isDraggable,\n            onChange: event => setIsDraggable(event.target.checked),\n            className: \"react-flow__draggable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), \"nodesDraggable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"connectable\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"connectable\",\n            type: \"checkbox\",\n            checked: isConnectable,\n            onChange: event => setIsConnectable(event.target.checked),\n            className: \"react-flow__connectable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \"nodesConnectable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectable\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"selectable\",\n            type: \"checkbox\",\n            checked: isSelectable,\n            onChange: event => setIsSelectable(event.target.checked),\n            className: \"react-flow__selectable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \"elementsSelectable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"zoomonscroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"zoomonscroll\",\n            type: \"checkbox\",\n            checked: zoomOnScroll,\n            onChange: event => setZoomOnScroll(event.target.checked),\n            className: \"react-flow__zoomonscroll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), \"zoomOnScroll\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"panonscroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"panonscroll\",\n            type: \"checkbox\",\n            checked: panOnScroll,\n            onChange: event => setPanOnScroll(event.target.checked),\n            className: \"react-flow__panonscroll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), \"panOnScroll\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"panonscrollmode\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"panonscrollmode\",\n            value: panOnScrollMode,\n            onChange: event => setPanOnScrollMode(event.target.value),\n            className: \"react-flow__panonscrollmode\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"free\",\n              children: \"free\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"horizontal\",\n              children: \"horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vertical\",\n              children: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), \"panOnScrollMode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"zoomondbl\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"zoomondbl\",\n            type: \"checkbox\",\n            checked: zoomOnDoubleClick,\n            onChange: event => setZoomOnDoubleClick(event.target.checked),\n            className: \"react-flow__zoomondbl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), \"zoomOnDoubleClick\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"panemoveable\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"panemoveable\",\n            type: \"checkbox\",\n            checked: paneMoveable,\n            onChange: event => setPaneMoveable(event.target.checked),\n            className: \"react-flow__panemoveable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), \"paneMoveable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capturezoompaneclick\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"capturezoompaneclick\",\n            type: \"checkbox\",\n            checked: captureZoomClick,\n            onChange: event => setCaptureZoomClick(event.target.checked),\n            className: \"react-flow__capturezoompaneclick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), \"capture onPaneClick\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capturezoompanescroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"capturezoompanescroll\",\n            type: \"checkbox\",\n            checked: captureZoomScroll,\n            onChange: event => setCaptureZoomScroll(event.target.checked),\n            className: \"react-flow__capturezoompanescroll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), \"capture onPaneScroll\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"captureelementclick\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"captureelementclick\",\n            type: \"checkbox\",\n            checked: captureElementClick,\n            onChange: event => setCaptureElementClick(event.target.checked),\n            className: \"react-flow__captureelementclick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), \"capture onElementClick\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InteractionFlow, \"QEGQvVVKdfQUtssQ+/6BcpDMIOE=\");\n\n_c = InteractionFlow;\nexport default InteractionFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"InteractionFlow\");","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/src/App.js"],"names":["React","useState","ReactFlow","addEdge","MiniMap","Controls","initialElements","id","type","data","label","position","x","y","source","target","animated","onNodeDragStart","event","node","console","log","onNodeDragStop","onElementClick","element","onPaneClick","onPaneScroll","onPaneContextMenu","onLoad","reactFlowInstance","fitView","padding","InteractionFlow","elements","setElements","onConnect","params","els","isSelectable","setIsSelectable","isDraggable","setIsDraggable","isConnectable","setIsConnectable","zoomOnScroll","setZoomOnScroll","panOnScroll","setPanOnScroll","panOnScrollMode","setPanOnScrollMode","zoomOnDoubleClick","setZoomOnDoubleClick","paneMoveable","setPaneMoveable","captureZoomClick","setCaptureZoomClick","captureZoomScroll","setCaptureZoomScroll","captureElementClick","setCaptureElementClick","undefined","left","top","zIndex","textTransform","checked","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ReactFlow, { addEdge, MiniMap, Controls } from 'react-flow-renderer';\r\n\r\nconst initialElements = [\r\n  {\r\n    id: 'interaction-1',\r\n    type: 'input',\r\n    data: { label: 'Node 1' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n  {\r\n    id: 'interaction-2',\r\n    data: { label: 'Node 2' },\r\n    position: { x: 100, y: 100 },\r\n  },\r\n  {\r\n    id: 'interaction-3',\r\n    data: { label: 'Node 3' },\r\n    position: { x: 400, y: 100 },\r\n  },\r\n  {\r\n    id: 'interaction-4',\r\n    data: { label: 'Node 4' },\r\n    position: { x: 400, y: 200 },\r\n  },\r\n  {\r\n    id: 'interaction-e1-2',\r\n    source: 'interaction-1',\r\n    target: 'interaction-2',\r\n    animated: true,\r\n  },\r\n  { id: 'interaction-e1-3', source: 'interaction-1', target: 'interaction-3' },\r\n];\r\n\r\nconst onNodeDragStart = (event, node) => console.log('drag start', node);\r\nconst onNodeDragStop = (event, node) => console.log('drag stop', node);\r\nconst onElementClick = (event, element) => console.log('click', element);\r\nconst onPaneClick = (event) => console.log('onPaneClick', event);\r\nconst onPaneScroll = (event) => console.log('onPaneScroll', event);\r\nconst onPaneContextMenu = (event) => console.log('onPaneContextMenu', event);\r\nconst onLoad = (reactFlowInstance) =>\r\n  reactFlowInstance.fitView({ padding: 0.2 });\r\n\r\nconst InteractionFlow = () => {\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n\r\n  const [isSelectable, setIsSelectable] = useState(false);\r\n  const [isDraggable, setIsDraggable] = useState(false);\r\n  const [isConnectable, setIsConnectable] = useState(false);\r\n  const [zoomOnScroll, setZoomOnScroll] = useState(false);\r\n  const [panOnScroll, setPanOnScroll] = useState(false);\r\n  const [panOnScrollMode, setPanOnScrollMode] = useState('free');\r\n  const [zoomOnDoubleClick, setZoomOnDoubleClick] = useState(false);\r\n  const [paneMoveable, setPaneMoveable] = useState(true);\r\n  const [captureZoomClick, setCaptureZoomClick] = useState(false);\r\n  const [captureZoomScroll, setCaptureZoomScroll] = useState(false);\r\n  const [captureElementClick, setCaptureElementClick] = useState(false);\r\n\r\n  return (\r\n    <ReactFlow\r\n      elements={elements}\r\n      elementsSelectable={isSelectable}\r\n      nodesConnectable={isConnectable}\r\n      nodesDraggable={isDraggable}\r\n      zoomOnScroll={zoomOnScroll}\r\n      panOnScroll={panOnScroll}\r\n      panOnScrollMode={panOnScrollMode}\r\n      zoomOnDoubleClick={zoomOnDoubleClick}\r\n      onConnect={onConnect}\r\n      onElementClick={captureElementClick ? onElementClick : undefined}\r\n      onNodeDragStart={onNodeDragStart}\r\n      onNodeDragStop={onNodeDragStop}\r\n      paneMoveable={paneMoveable}\r\n      onPaneClick={captureZoomClick ? onPaneClick : undefined}\r\n      onPaneScroll={captureZoomScroll ? onPaneScroll : undefined}\r\n      onPaneContextMenu={captureZoomClick ? onPaneContextMenu : undefined}\r\n      onLoad={onLoad}\r\n    >\r\n      <MiniMap />\r\n      <Controls />\r\n\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 10,\r\n          top: 10,\r\n          zIndex: 4,\r\n          textTransform: 'none',\r\n        }}\r\n      >\r\n        <div>\r\n          <label htmlFor=\"draggable\">\r\n            <input\r\n              id=\"draggable\"\r\n              type=\"checkbox\"\r\n              checked={isDraggable}\r\n              onChange={(event) => setIsDraggable(event.target.checked)}\r\n              className=\"react-flow__draggable\"\r\n            />\r\n            nodesDraggable\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"connectable\">\r\n            <input\r\n              id=\"connectable\"\r\n              type=\"checkbox\"\r\n              checked={isConnectable}\r\n              onChange={(event) => setIsConnectable(event.target.checked)}\r\n              className=\"react-flow__connectable\"\r\n            />\r\n            nodesConnectable\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"selectable\">\r\n            <input\r\n              id=\"selectable\"\r\n              type=\"checkbox\"\r\n              checked={isSelectable}\r\n              onChange={(event) => setIsSelectable(event.target.checked)}\r\n              className=\"react-flow__selectable\"\r\n            />\r\n            elementsSelectable\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"zoomonscroll\">\r\n            <input\r\n              id=\"zoomonscroll\"\r\n              type=\"checkbox\"\r\n              checked={zoomOnScroll}\r\n              onChange={(event) => setZoomOnScroll(event.target.checked)}\r\n              className=\"react-flow__zoomonscroll\"\r\n            />\r\n            zoomOnScroll\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"panonscroll\">\r\n            <input\r\n              id=\"panonscroll\"\r\n              type=\"checkbox\"\r\n              checked={panOnScroll}\r\n              onChange={(event) => setPanOnScroll(event.target.checked)}\r\n              className=\"react-flow__panonscroll\"\r\n            />\r\n            panOnScroll\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"panonscrollmode\">\r\n            <select\r\n              id=\"panonscrollmode\"\r\n              value={panOnScrollMode}\r\n              onChange={(event) => setPanOnScrollMode(event.target.value)}\r\n              className=\"react-flow__panonscrollmode\"\r\n            >\r\n              <option value=\"free\">free</option>\r\n              <option value=\"horizontal\">horizontal</option>\r\n              <option value=\"vertical\">vertical</option>\r\n            </select>\r\n            panOnScrollMode\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"zoomondbl\">\r\n            <input\r\n              id=\"zoomondbl\"\r\n              type=\"checkbox\"\r\n              checked={zoomOnDoubleClick}\r\n              onChange={(event) => setZoomOnDoubleClick(event.target.checked)}\r\n              className=\"react-flow__zoomondbl\"\r\n            />\r\n            zoomOnDoubleClick\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"panemoveable\">\r\n            <input\r\n              id=\"panemoveable\"\r\n              type=\"checkbox\"\r\n              checked={paneMoveable}\r\n              onChange={(event) => setPaneMoveable(event.target.checked)}\r\n              className=\"react-flow__panemoveable\"\r\n            />\r\n            paneMoveable\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"capturezoompaneclick\">\r\n            <input\r\n              id=\"capturezoompaneclick\"\r\n              type=\"checkbox\"\r\n              checked={captureZoomClick}\r\n              onChange={(event) => setCaptureZoomClick(event.target.checked)}\r\n              className=\"react-flow__capturezoompaneclick\"\r\n            />\r\n            capture onPaneClick\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"capturezoompanescroll\">\r\n            <input\r\n              id=\"capturezoompanescroll\"\r\n              type=\"checkbox\"\r\n              checked={captureZoomScroll}\r\n              onChange={(event) => setCaptureZoomScroll(event.target.checked)}\r\n              className=\"react-flow__capturezoompanescroll\"\r\n            />\r\n            capture onPaneScroll\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"captureelementclick\">\r\n            <input\r\n              id=\"captureelementclick\"\r\n              type=\"checkbox\"\r\n              checked={captureElementClick}\r\n              onChange={(event) => setCaptureElementClick(event.target.checked)}\r\n              className=\"react-flow__captureelementclick\"\r\n            />\r\n            capture onElementClick\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </ReactFlow>\r\n  );\r\n};\r\n\r\nexport default InteractionFlow;"]},"metadata":{},"sourceType":"module"}