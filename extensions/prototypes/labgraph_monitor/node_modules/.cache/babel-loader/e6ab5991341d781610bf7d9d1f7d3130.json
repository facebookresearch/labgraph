{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nvar greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === \"greedy\" ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n\n    visited[v] = true;\n    stack[v] = true;\n\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n\n    if (label.reversed) {\n      g.removeEdge(e);\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/dagre/lib/acyclic.js"],"names":["_","require","greedyFAS","module","exports","run","undo","g","fas","graph","acyclicer","weightFn","dfsFAS","forEach","e","label","edge","removeEdge","forwardName","name","reversed","setEdge","w","v","uniqueId","weight","stack","visited","dfs","has","outEdges","push","nodes","edges"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n    ? greedyFAS(g, weightFn(g))\n    : dfsFAS(g));\n  _.forEach(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}