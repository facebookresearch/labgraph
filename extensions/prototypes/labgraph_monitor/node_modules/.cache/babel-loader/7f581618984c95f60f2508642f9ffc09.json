{"ast":null,"code":"import dagre from 'dagre';\nconst NODE_WIDTH = 200;\nconst NODE_HEIGHT = 50;\n\nconst generateFlow = elements => {\n  const g = new dagre.graphlib.Graph();\n  g.setGraph({});\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n  elements.forEach(e => {\n    g.setNode(e.name, {\n      label: e.name,\n      width: NODE_WIDTH,\n      height: NODE_HEIGHT\n    });\n    e.links.forEach(i => {\n      g.setEdge(e.name, i.name);\n    });\n  });\n  dagre.layout(g);\n  const nodes = g.nodes().map(i => {\n    let n = g.node(i);\n    return {\n      id: i,\n      data: {\n        label: i\n      },\n      width: n.width,\n      height: n.height,\n      position: {\n        x: n.x - n.width / 2,\n        y: n.y - n.height / 2\n      }\n    };\n  });\n  const edges = g.edges().map(e => ({\n    id: `__${e.v}__${e.w}`,\n    points: g.edge(e).points,\n    source: e.w,\n    target: e.v,\n    animated: true\n  }));\n  return [...nodes, ...edges];\n};","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/src/App.js"],"names":["dagre","NODE_WIDTH","NODE_HEIGHT","generateFlow","elements","g","graphlib","Graph","setGraph","setDefaultEdgeLabel","forEach","e","setNode","name","label","width","height","links","i","setEdge","layout","nodes","map","n","node","id","data","position","x","y","edges","v","w","points","edge","source","target","animated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAA8B;AAEjD,QAAMC,CAAC,GAAG,IAAIL,KAAK,CAACM,QAAN,CAAeC,KAAnB,EAAV;AACAF,EAAAA,CAAC,CAACG,QAAF,CAAW,EAAX;AACAH,EAAAA,CAAC,CAACI,mBAAF,CAAsB,YAAW;AAAE,WAAO,EAAP;AAAY,GAA/C;AAEAL,EAAAA,QAAQ,CAACM,OAAT,CAAmBC,CAAD,IAAQ;AACxBN,IAAAA,CAAC,CAACO,OAAF,CAAUD,CAAC,CAACE,IAAZ,EAAkB;AAChBC,MAAAA,KAAK,EAAEH,CAAC,CAACE,IADO;AAEhBE,MAAAA,KAAK,EAAEd,UAFS;AAGhBe,MAAAA,MAAM,EAAEd;AAHQ,KAAlB;AAKAS,IAAAA,CAAC,CAACM,KAAF,CAAQP,OAAR,CAAiBQ,CAAD,IAAO;AACrBb,MAAAA,CAAC,CAACc,OAAF,CAAUR,CAAC,CAACE,IAAZ,EAAkBK,CAAC,CAACL,IAApB;AACD,KAFD;AAGD,GATD;AAWAb,EAAAA,KAAK,CAACoB,MAAN,CAAaf,CAAb;AAEA,QAAMgB,KAAK,GAAGhB,CAAC,CAACgB,KAAF,GAAUC,GAAV,CAAeJ,CAAD,IAAO;AACjC,QAAIK,CAAC,GAAGlB,CAAC,CAACmB,IAAF,CAAON,CAAP,CAAR;AACA,WAAO;AACLO,MAAAA,EAAE,EAAEP,CADC;AAELQ,MAAAA,IAAI,EAAE;AACJZ,QAAAA,KAAK,EAAEI;AADH,OAFD;AAKLH,MAAAA,KAAK,EAAEQ,CAAC,CAACR,KALJ;AAMLC,MAAAA,MAAM,EAAEO,CAAC,CAACP,MANL;AAOLW,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAEL,CAAC,CAACK,CAAF,GAAML,CAAC,CAACR,KAAF,GAAS,CADV;AAERc,QAAAA,CAAC,EAAEN,CAAC,CAACM,CAAF,GAAMN,CAAC,CAACP,MAAF,GAAW;AAFZ;AAPL,KAAP;AAYD,GAda,CAAd;AAgBA,QAAMc,KAAK,GAAGzB,CAAC,CAACyB,KAAF,GAAUR,GAAV,CAAeX,CAAD,KAAY;AACtCc,IAAAA,EAAE,EAAG,KAAId,CAAC,CAACoB,CAAE,KAAIpB,CAAC,CAACqB,CAAE,EADiB;AAEtCC,IAAAA,MAAM,EAAE5B,CAAC,CAAC6B,IAAF,CAAOvB,CAAP,EAAUsB,MAFoB;AAGtCE,IAAAA,MAAM,EAAExB,CAAC,CAACqB,CAH4B;AAItCI,IAAAA,MAAM,EAAEzB,CAAC,CAACoB,CAJ4B;AAKtCM,IAAAA,QAAQ,EAAE;AAL4B,GAAZ,CAAd,CAAd;AASA,SAAO,CAAC,GAAGhB,KAAJ,EAAW,GAAGS,KAAd,CAAP;AACD,CA7CD","sourcesContent":["import dagre from 'dagre';\r\n\r\nconst NODE_WIDTH = 200;\r\nconst NODE_HEIGHT = 50;\r\n\r\nconst generateFlow = (elements: Array<element>) => {\r\n  \r\n  const g = new dagre.graphlib.Graph();\r\n  g.setGraph({});\r\n  g.setDefaultEdgeLabel(function() { return {}; });\r\n\r\n  elements.forEach ((e) =>  {\r\n    g.setNode(e.name, {\r\n      label: e.name,\r\n      width: NODE_WIDTH,\r\n      height: NODE_HEIGHT\r\n    });\r\n    e.links.forEach((i) => {\r\n      g.setEdge(e.name, i.name);\r\n    });\r\n  });\r\n\r\n  dagre.layout(g);\r\n\r\n  const nodes = g.nodes().map((i) => {\r\n    let n = g.node(i);\r\n    return {\r\n      id: i,\r\n      data: {\r\n        label: i\r\n      },\r\n      width: n.width, \r\n      height: n.height,\r\n      position: { \r\n        x: n.x - n.width /2,\r\n        y: n.y - n.height / 2\r\n      },\r\n    };\r\n  });\r\n\r\n  const edges = g.edges().map((e:any) => ({\r\n    id: `__${e.v}__${e.w}`,\r\n    points: g.edge(e).points,\r\n    source: e.w,\r\n    target: e.v,\r\n    animated: true \r\n\r\n  }));\r\n \r\n  return [...nodes, ...edges];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}