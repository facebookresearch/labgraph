{"ast":null,"code":"var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\n\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n\n  var tag = getTag(collection);\n\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/lodash/size.js"],"names":["baseKeys","require","getTag","isArrayLike","isString","stringSize","mapTag","setTag","size","collection","length","tag","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CADpB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,eAAD,CAFzB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAHtB;AAAA,IAIII,UAAU,GAAGJ,OAAO,CAAC,eAAD,CAJxB;AAMA;;;AACA,IAAIK,MAAM,GAAG,cAAb;AAAA,IACIC,MAAM,GAAG,cADb;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,UAAd,EAA0B;AACxB,MAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAO,CAAP;AACD;;AACD,MAAIN,WAAW,CAACM,UAAD,CAAf,EAA6B;AAC3B,WAAOL,QAAQ,CAACK,UAAD,CAAR,GAAuBJ,UAAU,CAACI,UAAD,CAAjC,GAAgDA,UAAU,CAACC,MAAlE;AACD;;AACD,MAAIC,GAAG,GAAGT,MAAM,CAACO,UAAD,CAAhB;;AACA,MAAIE,GAAG,IAAIL,MAAP,IAAiBK,GAAG,IAAIJ,MAA5B,EAAoC;AAClC,WAAOE,UAAU,CAACD,IAAlB;AACD;;AACD,SAAOR,QAAQ,CAACS,UAAD,CAAR,CAAqBC,MAA5B;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBL,IAAjB","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;\n"]},"metadata":{},"sourceType":"script"}