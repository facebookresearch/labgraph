{"ast":null,"code":"/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/dagre/lib/data/list.js"],"names":["module","exports","List","sentinel","_next","_prev","_sentinel","prototype","dequeue","entry","unlink","enqueue","toString","strs","curr","push","JSON","stringify","filterOutLinks","join","k","v"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AAEA,SAASA,IAAT,GAAgB;AACd,MAAIC,QAAQ,GAAG,EAAf;AACAA,EAAAA,QAAQ,CAACC,KAAT,GAAiBD,QAAQ,CAACE,KAAT,GAAiBF,QAAlC;AACA,OAAKG,SAAL,GAAiBH,QAAjB;AACD;;AAEDD,IAAI,CAACK,SAAL,CAAeC,OAAf,GAAyB,YAAW;AAClC,MAAIL,QAAQ,GAAG,KAAKG,SAApB;AACA,MAAIG,KAAK,GAAGN,QAAQ,CAACE,KAArB;;AACA,MAAII,KAAK,KAAKN,QAAd,EAAwB;AACtBO,IAAAA,MAAM,CAACD,KAAD,CAAN;AACA,WAAOA,KAAP;AACD;AACF,CAPD;;AASAP,IAAI,CAACK,SAAL,CAAeI,OAAf,GAAyB,UAASF,KAAT,EAAgB;AACvC,MAAIN,QAAQ,GAAG,KAAKG,SAApB;;AACA,MAAIG,KAAK,CAACJ,KAAN,IAAeI,KAAK,CAACL,KAAzB,EAAgC;AAC9BM,IAAAA,MAAM,CAACD,KAAD,CAAN;AACD;;AACDA,EAAAA,KAAK,CAACL,KAAN,GAAcD,QAAQ,CAACC,KAAvB;AACAD,EAAAA,QAAQ,CAACC,KAAT,CAAeC,KAAf,GAAuBI,KAAvB;AACAN,EAAAA,QAAQ,CAACC,KAAT,GAAiBK,KAAjB;AACAA,EAAAA,KAAK,CAACJ,KAAN,GAAcF,QAAd;AACD,CATD;;AAWAD,IAAI,CAACK,SAAL,CAAeK,QAAf,GAA0B,YAAW;AACnC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIV,QAAQ,GAAG,KAAKG,SAApB;AACA,MAAIQ,IAAI,GAAGX,QAAQ,CAACE,KAApB;;AACA,SAAOS,IAAI,KAAKX,QAAhB,EAA0B;AACxBU,IAAAA,IAAI,CAACE,IAAL,CAAUC,IAAI,CAACC,SAAL,CAAeH,IAAf,EAAqBI,cAArB,CAAV;AACAJ,IAAAA,IAAI,GAAGA,IAAI,CAACT,KAAZ;AACD;;AACD,SAAO,MAAMQ,IAAI,CAACM,IAAL,CAAU,IAAV,CAAN,GAAwB,GAA/B;AACD,CATD;;AAWA,SAAST,MAAT,CAAgBD,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACJ,KAAN,CAAYD,KAAZ,GAAoBK,KAAK,CAACL,KAA1B;AACAK,EAAAA,KAAK,CAACL,KAAN,CAAYC,KAAZ,GAAoBI,KAAK,CAACJ,KAA1B;AACA,SAAOI,KAAK,CAACL,KAAb;AACA,SAAOK,KAAK,CAACJ,KAAb;AACD;;AAED,SAASa,cAAT,CAAwBE,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5B,MAAID,CAAC,KAAK,OAAN,IAAiBA,CAAC,KAAK,OAA3B,EAAoC;AAClC,WAAOC,CAAP;AACD;AACF","sourcesContent":["/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}