{"ast":null,"code":"var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function (key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/node_modules/lodash/_createFind.js"],"names":["baseIteratee","require","isArrayLike","keys","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","Object","iteratee","key","index","undefined","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAFlB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,UAAT,CAAoBC,aAApB,EAAmC;AACjC,SAAO,UAASC,UAAT,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AAChD,QAAIC,QAAQ,GAAGC,MAAM,CAACJ,UAAD,CAArB;;AACA,QAAI,CAACJ,WAAW,CAACI,UAAD,CAAhB,EAA8B;AAC5B,UAAIK,QAAQ,GAAGX,YAAY,CAACO,SAAD,EAAY,CAAZ,CAA3B;AACAD,MAAAA,UAAU,GAAGH,IAAI,CAACG,UAAD,CAAjB;;AACAC,MAAAA,SAAS,GAAG,UAASK,GAAT,EAAc;AAAE,eAAOD,QAAQ,CAACF,QAAQ,CAACG,GAAD,CAAT,EAAgBA,GAAhB,EAAqBH,QAArB,CAAf;AAAgD,OAA5E;AACD;;AACD,QAAII,KAAK,GAAGR,aAAa,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,CAAzB;AACA,WAAOK,KAAK,GAAG,CAAC,CAAT,GAAaJ,QAAQ,CAACE,QAAQ,GAAGL,UAAU,CAACO,KAAD,CAAb,GAAuBA,KAAhC,CAArB,GAA8DC,SAArE;AACD,GATD;AAUD;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,UAAjB","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n"]},"metadata":{},"sourceType":"script"}