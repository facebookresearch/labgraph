{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zenak\\\\Desktop\\\\labgraph_monitor\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactFlow from 'react-flow-renderer'; // sample input: [(NoiseGenerator, RollingAverager),(RollingAverager, AveragedNoise),(AveragedNoise, Plot)]\n// sample adjacency list: {'NoiseGenerator': ['RollingAverager'], 'RollingAverager': ['AveragedNoise'], 'AveragedNoise': ['Plot']}\n// const adjacencyList = {'NoiseGenerator': ['RollingAverager'], 'RollingAverager': ['AveragedNoise'], 'AveragedNoise': ['Plot']}\n// const adjacencyListKeys = Object.keys(adjacencyList)\n// const elements = []\n// for (let i = 0; i < adjacencyListKeys.length; i++) {\n//   const n = adjacencyListKeys[i]\n//   elements.push({\n//     id: `${i + 1}`,\n//     data: { label: node[0] },\n//     position: { x: 100 + 60 * i, y: 125 + 60 * i },\n//   })\n// }\n// for (let i = 0; i < adjacencyListKeys.length - 1; i++) {\n//   elements.push({ id: `e${i + 1}-${i + 2}`, source: '1', target: '2', animated: true },)\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar elements = [{\n  // input node\n  id: 'one',\n  type: 'input',\n  // input node\n  data: {\n    label: 'NoiseGenerator'\n  },\n  position: {\n    x: 250,\n    y: 25\n  }\n}, // in-between nodes\n{\n  id: 'two',\n  data: {\n    label: 'RollingAverage'\n  },\n  position: {\n    x: 100,\n    y: 125\n  }\n}, {\n  id: 'three',\n  data: {\n    label: 'AveragedNoise'\n  },\n  position: {\n    x: 225,\n    y: 200\n  }\n}, {\n  id: 'four',\n  type: 'output',\n  // output node\n  data: {\n    label: 'Plot'\n  },\n  position: {\n    x: 250,\n    y: 250\n  }\n}, // animated edge\n{\n  id: 'e1-2',\n  source: 'one',\n  target: 'two',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: 'two',\n  target: 'three',\n  animated: true\n}, {\n  id: 'e3-4',\n  source: 'three',\n  target: 'four',\n  animated: true\n}];\nexport default (() => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    height: 800\n  },\n  children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n    elements: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/Users/zenak/Desktop/labgraph_monitor/src/App.js"],"names":["React","ReactFlow","elements","id","type","data","label","position","x","y","source","target","animated","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,IAAIC,QAAQ,GAAG,CAEb;AAAE;AACAC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAEiB;AACfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CAFa,EAQb;AACA;AACEN,EAAAA,EAAE,EAAE,KADN;AAEEE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAHZ,CATa,EAcb;AACEN,EAAAA,EAAE,EAAE,OADN;AAEEE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAHZ,CAda,EAmBb;AACEN,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAEkB;AAChBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CAnBa,EA0Bb;AACA;AAAEN,EAAAA,EAAE,EAAE,MAAN;AAAcO,EAAAA,MAAM,EAAE,KAAtB;AAA6BC,EAAAA,MAAM,EAAE,KAArC;AAA4CC,EAAAA,QAAQ,EAAE;AAAtD,CA3Ba,EA4Bb;AAAET,EAAAA,EAAE,EAAE,MAAN;AAAcO,EAAAA,MAAM,EAAE,KAAtB;AAA6BC,EAAAA,MAAM,EAAE,OAArC;AAA8CC,EAAAA,QAAQ,EAAE;AAAxD,CA5Ba,EA6Bb;AAAET,EAAAA,EAAE,EAAE,MAAN;AAAcO,EAAAA,MAAM,EAAE,OAAtB;AAA+BC,EAAAA,MAAM,EAAE,MAAvC;AAA+CC,EAAAA,QAAQ,EAAE;AAAzD,CA7Ba,CAAf;AAgCA,gBAAe,mBACb;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAZ;AAAA,yBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from 'react';\r\nimport ReactFlow from 'react-flow-renderer';\r\n\r\n// sample input: [(NoiseGenerator, RollingAverager),(RollingAverager, AveragedNoise),(AveragedNoise, Plot)]\r\n// sample adjacency list: {'NoiseGenerator': ['RollingAverager'], 'RollingAverager': ['AveragedNoise'], 'AveragedNoise': ['Plot']}\r\n\r\n// const adjacencyList = {'NoiseGenerator': ['RollingAverager'], 'RollingAverager': ['AveragedNoise'], 'AveragedNoise': ['Plot']}\r\n\r\n// const adjacencyListKeys = Object.keys(adjacencyList)\r\n\r\n// const elements = []\r\n// for (let i = 0; i < adjacencyListKeys.length; i++) {\r\n//   const n = adjacencyListKeys[i]\r\n\r\n//   elements.push({\r\n//     id: `${i + 1}`,\r\n//     data: { label: node[0] },\r\n//     position: { x: 100 + 60 * i, y: 125 + 60 * i },\r\n//   })\r\n// }\r\n\r\n// for (let i = 0; i < adjacencyListKeys.length - 1; i++) {\r\n//   elements.push({ id: `e${i + 1}-${i + 2}`, source: '1', target: '2', animated: true },)\r\n// }\r\n\r\n\r\nvar elements = [\r\n\r\n  { // input node\r\n    id: 'one',\r\n    type: 'input', // input node\r\n    data: { label: 'NoiseGenerator' },\r\n    position: { x: 250, y: 25 },\r\n  },\r\n  // in-between nodes\r\n  {\r\n    id: 'two',\r\n    data: { label: 'RollingAverage' },\r\n    position: { x: 100, y: 125 },\r\n  },\r\n  {\r\n    id: 'three',\r\n    data: { label: 'AveragedNoise' },\r\n    position: { x: 225, y: 200 },\r\n  },\r\n  {\r\n    id: 'four',\r\n    type: 'output', // output node\r\n    data: { label: 'Plot' },\r\n    position: { x: 250, y: 250 },\r\n  },\r\n\r\n  // animated edge\r\n  { id: 'e1-2', source: 'one', target: 'two', animated: true },\r\n  { id: 'e2-3', source: 'two', target: 'three', animated: true },\r\n  { id: 'e3-4', source: 'three', target: 'four', animated: true },\r\n];\r\n\r\nexport default () => (\r\n  <div style={{ height: 800 }}>\r\n    <ReactFlow elements={elements} />\r\n  </div>\r\n);"]},"metadata":{},"sourceType":"module"}